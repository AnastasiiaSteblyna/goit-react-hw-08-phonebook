{"version":3,"file":"static/js/855.888c6f9d.chunk.js","mappings":"2SA4BA,EAxBsB,WACpB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAV,IAMrC,OACE,UAAC,IAAD,CAAOC,EAAE,QAAQC,GAAG,OAAOC,GAAG,IAAIC,QAAS,EAA3C,WACE,SAAC,IAAD,CAAMC,MAAM,QAAQC,WAAW,OAA/B,oCAGA,SAAC,EAAAC,EAAD,CACEF,MAAO,QACPG,SAXiB,SAAAC,GACrBd,GAASe,EAAAA,EAAAA,GAAUD,EAAME,cAAcC,MAAMC,eAC9C,EAUKD,MAAOf,EACPiB,KAAK,OACLC,KAAK,aAIZ,E,qECsBD,EAzCwB,SAAC,GAA0B,IAAxBA,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,GACvC,GACEC,EAAAA,EAAAA,MADF,eAAOC,EAAP,YAAoCC,EAApC,EAAyBC,UAAuBC,EAAhD,EAAgDA,UAAWC,EAA3D,EAA2DA,MAQ3D,OALAC,EAAAA,EAAAA,YAAU,WACRF,GAAaG,EAAAA,GAAAA,KAAA,WAAeV,EAAf,aACbQ,GAASE,EAAAA,GAAAA,MAAY,uBACtB,GAAE,CAACH,EAAWP,EAAMQ,KAGnB,SAAC,KAAD,CAAcG,GAAG,IAAjB,UACE,UAAC,IAAD,CACEC,cAAc,YACdC,WAAW,SACXC,eAAe,gBACf5B,EAAE,QACFyB,GAAG,IACHrB,MAAO,QANT,UAQGU,EARH,yBAQ+BC,GAC7B,SAAC,IAAD,CACEF,KAAK,SACLgB,QAAS,kBAAMX,EAAeF,EAArB,EACTc,SAAUX,EACVY,GAAI,iBACJ3B,MAAO,QACP4B,OAAQ,CAAED,GAAI,kBANhB,SAQGZ,EAAa,WAAa,eAlBvBH,EAuBb,ECHD,EA/BoB,WAClB,OAA6BiB,EAAAA,EAAAA,MAArBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACRpC,GAASF,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAV,IAE1BqC,EACJF,GAAQA,EAAKnC,QAAO,SAAAsC,GAAO,OAAIA,EAAQvB,KAAKF,cAAc0B,SAASvC,EAAxC,IAE7B,OACE,gCACGoC,IACC,SAAC,IAAD,CACEI,UAAU,MACVC,MAAM,QACNC,WAAW,WACXrC,MAAM,WACNsC,KAAK,KACLC,GAAG,QAGNT,GAAwB,IAAhBA,EAAKU,SACZ,wBACGR,EAASS,KAAI,SAAAR,GAAO,OACnB,SAAC,GAAD,UAAsCA,GAAhBA,EAAQrB,GADX,MAKxBkB,GAAwB,IAAhBA,EAAKU,SAAgB,gEAGnC,E,oBC4DD,EAtFoB,WAClB,OACEE,EAAAA,EAAAA,MADF,eAAOC,EAAP,YAAsB3B,EAAtB,EAAsBA,UAAWC,EAAjC,EAAiCA,UAAWC,EAA5C,EAA4CA,MAEpCY,GAASD,EAAAA,EAAAA,MAATC,KACR,GAAwBc,EAAAA,EAAAA,UAAS,IAAjC,eAAOlC,EAAP,KAAamC,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOjC,EAAP,KAAemC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,MAEA7B,EAAAA,EAAAA,YAAU,WACRF,GACEG,EAAAA,GAAAA,QAAA,WAAkB2B,EAAlB,sBAA8C,CAC5CE,UAAW,MAEf/B,GAASE,EAAAA,GAAAA,MAAY,uBACtB,GAAE,CAACF,EAAOD,EAAW8B,IAEtB,IAAMG,EAAoB,SAAC,GAAwC,IAAD,IAArC5C,cAAiBI,EAAoB,EAApBA,KAAMH,EAAc,EAAdA,MAClD,OAAQG,GACN,IAAK,OACHmC,EAAQtC,GACR,MACF,IAAK,SACHuC,EAAUvC,GACV,MACF,QACE,OAEL,EAeD,OACE,iBAAM4C,aAAa,MAAMC,SAdN,SAAAhD,GACnBA,EAAMiD,iBACNL,EAAUtC,GACVoB,EAAKwB,OAAM,SAAAC,GAAI,OAAIA,EAAK7C,KAAKF,gBAAkBE,EAAKF,aAArC,IACXmC,EAAY,CACVjC,KAAMA,EACNC,OAAQA,IAEVS,EAAAA,GAAAA,MAAA,UAAeV,EAAf,4BACJmC,EAAQ,IACRC,EAAU,GACX,EAGC,UACE,UAAC,IAAD,CAAOlD,EAAE,QAAQC,GAAG,OAAOC,GAAG,IAAIC,QAAS,EAA3C,WACE,UAAC,KAAD,CAAaa,GAAG,OAAhB,WACE,SAAC,IAAD,CAAWZ,MAAO,QAAlB,mBACA,SAAC,EAAAE,EAAD,CACEF,MAAO,QACPG,SAAU+C,EACV3C,MAAOG,EACPD,KAAK,OACLC,KAAK,OACL8C,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,uBAGhB,UAAC,KAAD,CAAa/C,GAAG,OAAhB,WACE,SAAC,IAAD,CAAWZ,MAAO,QAAlB,qBACA,SAAC,EAAAE,EAAD,CACEF,MAAO,QACPG,SAAU+C,EACV3C,MAAOI,EACPF,KAAK,MACLC,KAAK,SACL8C,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,YAAY,gBAGhB,SAAC,IAAD,CACEhC,GAAI,iBACJ3B,MAAO,QACP4B,OAAQ,CAAED,GAAI,kBACdlB,KAAK,SAJP,SAMGO,EAAY,YAAc,oBAKpC,E,UClDD,EA7BqB,WACnB,IAAM4C,GAAanE,EAAAA,EAAAA,IAAYoE,EAAAA,IAC/B,OACE,SAAC,IAAD,CACEC,KAAM,QACNC,MAAO,SACPC,QAAS,SACTC,gBAAe,cAASC,EAAT,KACfC,eAAgB,QAChBC,mBAAoB,gBANtB,UAQE,SAAC,IAAD,CAAOrE,QAAS,EAAGF,GAAI,OAAQwE,KAAM,KAAMC,GAAI,GAAIC,GAAI,EAAvD,UACE,UAAC,KAAD,CAAKC,QAAS,KAAM7C,GAAI,iBAAkB8C,UAAW,KAAMC,EAAG,EAA9D,WACId,IAAc,SAAC,KAAD,CAAUe,GAAG,IAAIC,SAAS,KAC1C,SAAC,IAAD,CAASb,MAAM,SAAS/D,MAAO,iBAA/B,wBAGA,SAAC,EAAD,KACA,SAAC,IAAD,CAAS+D,MAAM,SAAS/D,MAAO,iBAA/B,uBAGA,SAAC,EAAD,KACA,SAAC,EAAD,UAKT,C,iRC/BG6E,GAAOC,EAAAA,EAAAA,IAAW,SAAeC,EAAOC,GAC1C,IAAMC,GAASC,EAAAA,EAAAA,IAAe,OAAQH,GACtC,GAA0DI,EAAAA,EAAAA,IAAiBJ,GAA1BK,GAAjD,EAAQC,UAAR,EAAmBtB,MAAnB,EAA0BuB,WAA1B,EAAsCC,QAAtC,aACMC,GAAeC,EAAAA,EAAAA,IAAQ,CAC3BC,UAAWX,EAAMhB,MACjB4B,eAAgBZ,EAAMO,WACtBhE,cAAeyD,EAAMQ,SAEvB,OAAuBK,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,GADwB,QAAC,gBAGvBb,IAAAA,EACAK,WAAWS,EAAAA,EAAAA,IAAG,cAAef,EAAMM,YAChCG,GACAJ,GANmB,IAOtBW,MAAOd,IAGZ,IACDJ,EAAKmB,YAAc,M","sources":["components/ContactFilter/ContactFilter.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","pages/ContactsPage.js","../node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { Stack, Input, Text } from '@chakra-ui/react';\nimport { setFilter } from 'redux/slices/FilterSlice';\n\nconst ContactFilter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(state => state.filter);\n\n  const onFilterChange = event => {\n    dispatch(setFilter(event.currentTarget.value.toLowerCase()));\n  };\n\n  return (\n    <Stack w=\"400px\" mx=\"auto\" my=\"6\" spacing={3}>\n      <Text color=\"white\" fontWeight=\"bold\">\n        Find contacts by name\n      </Text>\n      <Input\n        color={'white'}\n        onChange={onFilterChange}\n        value={filterValue}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </Stack>\n  );\n};\n\nexport default ContactFilter;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { Flex, Box, Button } from '@chakra-ui/react';\n\nimport { useDeleteContactsMutation } from 'redux/api/ContactsApi';\n\nconst ContactListItem = ({ name, number, id }) => {\n  const [deleteContacts, { isLoading: isDeleting, isSuccess, error }] =\n    useDeleteContactsMutation();\n\n  useEffect(() => {\n    isSuccess && toast.info(` ${name} removed`);\n    error && toast.error('something went wrong');\n  }, [isSuccess, name, error]);\n\n  return (\n    <Box key={id} mb=\"5\">\n      <Flex\n        textTransform=\"uppercase\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        w=\"400px\"\n        mb=\"5\"\n        color={'white'}\n      >\n        {name} &bull; &bull; &bull; {number}\n        <Button\n          type=\"button\"\n          onClick={() => deleteContacts(id)}\n          disabled={isDeleting}\n          bg={'blackAlpha.400'}\n          color={'white'}\n          _hover={{ bg: 'blackAlpha.300' }}\n        >\n          {isDeleting ? 'Deleting' : 'Delete'}\n        </Button>\n      </Flex>\n    </Box>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import { useSelector } from 'react-redux';\nimport { useGetContactQuery } from 'redux/api/ContactsApi';\nimport { Spinner } from '@chakra-ui/react';\n\nimport ContactListItem from './ContactListItem';\n\nconst ContactList = () => {\n  const { data, isFetching } = useGetContactQuery();\n  const filter = useSelector(state => state.filter);\n\n  const contacts =\n    data && data.filter(contact => contact.name.toLowerCase().includes(filter));\n\n  return (\n    <>\n      {isFetching && (\n        <Spinner\n          thickness=\"4px\"\n          speed=\"0.95s\"\n          emptyColor=\"gray.200\"\n          color=\"blue.200\"\n          size=\"xl\"\n          ml=\"190\"\n        />\n      )}\n      {data && data.length !== 0 && (\n        <ul>\n          {contacts.map(contact => (\n            <ContactListItem key={contact.id} {...contact} />\n          ))}\n        </ul>\n      )}\n      {data && data.length === 0 && <p>Add your contacts to see them here</p>}\n    </>\n  );\n};\n\nexport default ContactList;\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { Stack, Input, Button, FormControl, FormLabel } from '@chakra-ui/react';\n\nimport {\n  useGetContactQuery,\n  useAddContactsMutation,\n} from 'redux/api/ContactsApi';\n\nconst ContactForm = () => {\n  const [addContacts, { isLoading, isSuccess, error }] =\n    useAddContactsMutation();\n  const { data } = useGetContactQuery();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [notify, setNotify] = useState('');\n\n  useEffect(() => {\n    isSuccess &&\n      toast.success(` ${notify} succesfully added`, {\n        autoClose: 800,\n      });\n    error && toast.error('something went wrong');\n  }, [error, isSuccess, notify]);\n\n  const handleInputChange = ({ currentTarget: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setNotify(name);\n    data.every(item => item.name.toLowerCase() !== name.toLowerCase())\n      ? addContacts({\n          name: name,\n          number: number,\n        })\n      : toast.error(`${name} is alredy in contacts!`);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit}>\n      <Stack w=\"400px\" mx=\"auto\" my=\"6\" spacing={4}>\n        <FormControl id=\"name\">\n          <FormLabel color={'white'}>Name</FormLabel>\n          <Input\n            color={'white'}\n            onChange={handleInputChange}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Davyd Steblyna\"\n          />\n        </FormControl>\n        <FormControl id=\"name\">\n          <FormLabel color={'white'}>Number</FormLabel>\n          <Input\n            color={'white'}\n            onChange={handleInputChange}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"+380...\"\n          />\n        </FormControl>\n        <Button\n          bg={'blackAlpha.600'}\n          color={'white'}\n          _hover={{ bg: 'blackAlpha.400' }}\n          type=\"submit\"\n        >\n          {isLoading ? 'Adding...' : 'Add Contact'}\n        </Button>\n      </Stack>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Heading, Box } from '@chakra-ui/react';\n\nimport { getLoggedin } from 'redux/slices/AuthSlice';\nimport ContactFilter from 'components/ContactFilter/ContactFilter';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\n\nimport { Stack, Flex } from '@chakra-ui/react';\n\nimport Background from '../images/bg.jpg';\n\nconst ContactsView = () => {\n  const isLogdedin = useSelector(getLoggedin);\n  return (\n    <Flex\n      minH={'100vh'}\n      align={'center'}\n      justify={'center'}\n      backgroundImage={`url(${Background})`}\n      backgroundSize={'cover'}\n      backgroundPosition={'center center'}\n    >\n      <Stack spacing={8} mx={'auto'} maxW={'lg'} py={12} px={6}>\n        <Box rounded={'lg'} bg={'blackAlpha.400'} boxShadow={'lg'} p={8}>\n          {!isLogdedin && <Navigate to=\"/\" replace={true} />}\n          <Heading align=\"center\" color={'whiteAlpha.800'}>\n            Phonebook\n          </Heading>\n          <ContactForm />\n          <Heading align=\"center\" color={'whiteAlpha.800'}>\n            Contacts\n          </Heading>\n          <ContactFilter />\n          <ContactList />\n        </Box>\n      </Stack>\n    </Flex>\n  );\n};\n\nexport default ContactsView;\n","// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n"],"names":["dispatch","useDispatch","filterValue","useSelector","state","filter","w","mx","my","spacing","color","fontWeight","I","onChange","event","setFilter","currentTarget","value","toLowerCase","type","name","number","id","useDeleteContactsMutation","deleteContacts","isDeleting","isLoading","isSuccess","error","useEffect","toast","mb","textTransform","alignItems","justifyContent","onClick","disabled","bg","_hover","useGetContactQuery","data","isFetching","contacts","contact","includes","thickness","speed","emptyColor","size","ml","length","map","useAddContactsMutation","addContacts","useState","setName","setNumber","notify","setNotify","autoClose","handleInputChange","autoComplete","onSubmit","preventDefault","every","item","pattern","title","required","placeholder","isLogdedin","getLoggedin","minH","align","justify","backgroundImage","Background","backgroundSize","backgroundPosition","maxW","py","px","rounded","boxShadow","p","to","replace","Text","forwardRef","props","ref","styles","useStyleConfig","omitThemingProps","rest","className","decoration","casing","aliasedProps","compact","textAlign","textDecoration","jsx","chakra","cx","__css","displayName"],"sourceRoot":""}